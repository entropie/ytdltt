#!/usr/bin/env/ruby



# make sure to really stfu to be able pipe output
devnull = File.open(File::NULL, "w")
$original_stdout = $stdout
$stdout = devnull


require "fileutils"
require_relative "../lib/ytdltt"
require_relative "../lib/ytdltt/srt_extract.rb"


module YTDLTT
  
  if ARGV.size > 0
    *opts, url = *ARGV

    target_dir = File.expand_path(Dir.pwd)

    subtitleopts = [
      "--write-auto-sub",
      "--sleep-requests", "0.75",
      "--sleep-subtitles", "5",
      "--convert-subs", "srt",
      "-o", "%(id)s.%(ext)s",
      "--skip-download",
      "--no-mtime",
      "--no-playlist",
      "-P", "."
    ]

    combined_opts = [*subtitleopts, *opts]

    if not combined_opts.include?("--sub-lang")
      subtitleopts << "--sub-lang" << "en"
    end

    ohash = { url: url, parameters: combined_opts }

    wrapper = YTDLWrapper[ohash, config: {}]
    ytid = url.scan(/\bv=([a-zA-Z0-9_-]{11})\b/).flatten.join

   
    puts wrapper.raw_command
    Open3.popen2e(*wrapper.raw_command) do |stdin, stdout_and_err, wait_thr|
      exit_status = wait_thr.value
      puts stdout_and_err.read
    end

    $stdout = $original_stdout
    subtitlefile = Dir.glob("#{ytid}.*.srt").shift

    abort "no subitle file" unless subtitlefile

    lines = File.readlines(subtitlefile, chomp: true)

    puts SRTExtract.extract_subtitles(lines.join("\n"))
    FileUtils.rm(subtitlefile)
  end


end
